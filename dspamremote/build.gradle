apply plugin: 'com.android.application'

def copywwwDepend = 'packageFreeDebug'

android {
    signingConfigs {
        apksignJKS {
            keyAlias 'swmud.net_APK'
            storeFile file('/root/AndroidStudioProjects/DSpam/keystores/apksign.jks')
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "net.swmud.trog.dspam"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.apksignJKS
            copywwwDepend = 'packageFreeRelease'
        }
    }
    flavorDimensions "version"
    productFlavors {
        free {
            signingConfig signingConfigs.apksignJKS
            minSdkVersion 18
            applicationId 'net.swmud.trog.dspam'
            targetSdkVersion 23
            versionCode 1
            versionName '1.0'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'
    //    testCompile 'org.powermock:powermock:1.6.5'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'com.google.guava:guava:28.2-android'
}

task copywww(dependsOn: [copywwwDepend], type: Copy) {
    from ('build/outputs/apk')
    include '*.apk'
    destinationDir file('/home/dupa/www')
}

/*
afterEvaluate {
    assembleFreeDebug.dependsOn copywww
    assembleFreeRelease.dependsOn copywww
}
*/
