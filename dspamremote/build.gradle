apply plugin: 'com.android.application'

def copywwwDepend = 'packageFreeDebug'

android {
    signingConfigs {
        apksignJKS {
            keyAlias 'swmud.net_APK'
            storeFile file('/root/AndroidStudioProjects/DSpam/keystores/apksign.jks')
        }
    }
    compileSdkVersion 23
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "net.swmud.trog.dspam"
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.apksignJKS
            copywwwDepend = 'packageFreeRelease'
        }
    }
    productFlavors {
        free {
            signingConfig signingConfigs.apksignJKS
            minSdkVersion 18
            applicationId 'net.swmud.trog.dspam'
            targetSdkVersion 23
            versionCode 1
            versionName '1.0'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'com.android.support:support-v4:23.3.0'
    testCompile 'junit:junit:4.12'
    //    testCompile 'org.powermock:powermock:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
    testCompile 'com.google.guava:guava:23.0-android'
}

task copywww(dependsOn: [copywwwDepend], type: Copy) {
    from ('build/outputs/apk')
    include '*.apk'
    destinationDir file('/home/dupa/www')
}

afterEvaluate {
    assembleFreeDebug.dependsOn copywww
    assembleFreeRelease.dependsOn copywww
}
